/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumber, BigNumberish, BaseContract, ContractTransaction, Overrides, PayableOverrides, CallOverrides } from 'ethers'
import { Provider } from '@ethersproject/providers'

export class TierMint extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  buyAndBurn(amount: BigNumberish, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  getTiers(
    user: string,
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, BigNumber, BigNumber] & {
      amount: BigNumber
      endDay: BigNumber
      lastHarvestDay: BigNumber
    })[]
  >

  harvest(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  info(
    account: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
      round: BigNumber
      price: BigNumber
      total: BigNumber
      bnbAmount: BigNumber
      remain: BigNumber
      balance: BigNumber
      mintBonus: BigNumber
      buyBonus: BigNumber
    }
  >

  initialize(
    _inviters: string,
    _fdao: string,
    _fomo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  isStop(overrides?: CallOverrides): Promise<boolean>

  setRange(
    min: BigNumberish,
    max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  stop(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  tierMint(overrides?: PayableOverrides & { from?: string | Promise<string> }): Promise<ContractTransaction>
}
