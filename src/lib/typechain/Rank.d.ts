/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumber, BigNumberish, BaseContract, ContractTransaction, Overrides, CallOverrides } from 'ethers'
import { Provider } from '@ethersproject/providers'

export class Rank extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  close(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  initialize(
    _fdao: string,
    _lucky100: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  status(
    user: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber }
      ],
      [
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber }
      ],
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        round: BigNumber
        invitedInRound: BigNumber
        invited: BigNumber
        totalReward: BigNumber
      }
    ] & {
      last: [
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber }
      ]
      current: [
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber },
        [string, BigNumber] & { user: string; count: BigNumber }
      ]
      info: [BigNumber, BigNumber, BigNumber, BigNumber] & {
        round: BigNumber
        invitedInRound: BigNumber
        invited: BigNumber
        totalReward: BigNumber
      }
    }
  >

  update(user: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>
}
