/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumber, BigNumberish, BaseContract, ContractTransaction, Overrides, CallOverrides } from 'ethers'
import { Provider } from '@ethersproject/providers'

export class Fomo extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  checkStatus(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  harvest(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  info(
    user: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      value: BigNumber
      lastTime: BigNumber
      total: BigNumber
      amount: BigNumber
    }
  >

  initialize(
    _fdao: string,
    _tierMint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  notifyMint(
    round: BigNumberish,
    minter: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  setDev(_dev: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  status(overrides?: CallOverrides): Promise<number>

  stop(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  transfer(to: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>

  update(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>
}
